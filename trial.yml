# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# variables:
#  subscriptionId: '29c1ad9f-091e-48a2-9184-01a489833f34'
#  resourceGroupName: 'cpg-dnd'
#  location: 'Central US'
#  adminUsername: 'ValarVM'
#  authenticationType: 'password'
#  adminPasswordOrKey: 'SnowUser@2022!Galaxy'
#  vmName: 'valarvm002-vm'
#  networkSecurityGroupName: 'valarvm002-group'
#  subnetName: 'valarsubnet001'
#  virtualNetworkName: 'valar-vm'

trigger:
- main

pool:
  vmImage: ubuntu-latest
  
steps:
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Cloud Management Azure Subscrption'
    subscriptionId: $(subscriptionId)
    action: 'Create Or Update Resource Group'
    resourceGroupName: $(resourceGroupName)
    location: $(location)
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/ishika2741/azure-devops-demo/main/CreateWebApp/trial.json'
    deploymentMode: 'Incremental'
    deploymentName: 'DevopsVM'
    overrideParameters: '-adminUsername $(adminUsername) -authenticationType $(authenticationType) -adminPasswordOrKey $(adminPasswordOrKey) -vmName $(vmName) -deploymentID $(deploymentID) -networkSecurityGroupName $(networkSecurityGroupName) -subnetName $(subnetName)'
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


- task: CopyFiles@2
  inputs:
    targetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  condition: succeeded()
